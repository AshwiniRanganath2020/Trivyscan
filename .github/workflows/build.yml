name: build

on:
  push:
    branches:
      - "master"
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Event Info
      if: github.actor != 'dependabot[bot]' && !(github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: |
          echo "::warning  ::Code changes wont be deployed for pull requests."  
    - name: Clear GitHub Workspace
      run: rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE
      
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Build docker image from Dockerfile (Optional)
      run: |
           docker build -t ashwiniranganath2020/trivyscan:latest -t ashwiniranganath2020/trivyscan:1.0 .
    - name: copy template file from  Trivyscan repo
      run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/BH-Corporate-Functions/shared-workflows.git
    - name: copy the docker file to template directory
      run: |
         cp ${{ inputs.docker_file_path }}./Trivyscan/Dockerfile ./Trivyscan/config    
    - name: Install Trivy CLI
      run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.31.3
    - name: trivy image scan
      run: |
          trivy image  ashwiniranganath2020/trivyscan
          
    - name: downloading  vulnerability  database
      run: |
          /usr/local/bin/trivy image --download-db-only
    - name: Run Trivy  scan for Docker Image and generate html report
      run: |
         /usr/local/bin/trivy image --format template --template "@./Trivyscan/html.tpl" --ignorefile "./Trivyscan/.trivyignore" -o Report.html ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}
              
    - name: Run Trivy scan for filesystem and generate html report(Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
      run: |
          /usr/local/bin/trivy -q fs . --format template --template "@./Trivyscan/html.tpl" --ignorefile "/Trivyscan/.trivyignore" -o Report2.html ${{ inputs.Package_lock }}
    
    - name: Run Trivy scan for dockerfile 
      run: |
          /usr/local/bin/trivy conf --policy ./Trivyscan/policies --format template --template "@./Trivyscan/html.tpl" -o Report3.html  --namespaces user ./Trivyscan/config
        
    - name: Append all reports to Report.html
      run: |
          cat Report3.html >> Report2.html;cat Report2.html >> Report.html
    - name: Upload Trivy vulnerabilities Report to artifact
      uses: actions/upload-artifact@v3
      with:
          path: "Report.html"
    - name: check for Crtical & High vulnerabilities in Docker Image
      run: |
           /usr/local/bin/trivy image --no-progress --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./Trivyscan/.trivyignore" ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}
          
    - name: Check for filesystem (Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
      run: |
          /usr/local/bin/trivy -q fs . --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./Trivyscan/.trivyignore"  ${{ inputs.Packages_lock }}      
    - name: check for Misconfig in Dockerfile (Optional)
      run: |
          /usr/local/bin/trivy conf --exit-code 1 --severity CRITICAL --policy ./Trivyscan/policies  --namespaces user ./Trivyscan/config
    -
        name: Checkout
        uses: actions/checkout@v3
    -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/trivyscan:2.0
